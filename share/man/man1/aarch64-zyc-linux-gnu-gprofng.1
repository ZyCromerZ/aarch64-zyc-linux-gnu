.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GPROFNG 1"
.TH GPROFNG 1 "2023-03-20" "binutils-2.40.50" "User Commands"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
gprofng \- GNU gprofng
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gprofng [\s-1OPTION\s0(S)] \s-1ACTION\s0 [\fB\s-1QUALIFIER\s0\fR] [\s-1ARGUMENTS\s0] \s-1TARGET\s0
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the driver for the \s-1GPROFNG\s0 tools suite to gather and analyze performance data.
.PP
The driver executes the action specified. An example of an action is \f(CW\*(C`collect\*(C'\fR
to collect performance data. Depending on the action, a qualifier may be needed to
define the command. Several qualifiers support options. The last item on the command
is the target the command applies to.
.PP
For example, to collect performance data for an application called \f(CW\*(C`a.out\*(C'\fR and
store the results in experiment directory \f(CW\*(C`mydata.er\*(C'\fR, the following command may
be used:
.PP
.Vb 1
\&        $ gprofng collect app \-o mydata.er a.out
.Ve
.PP
In this example, the action is \f(CW\*(C`collect\*(C'\fR, the qualifier is \f(CW\*(C`app\*(C'\fR, the single
argument is \f(CW\*(C`\-o mydata.er\*(C'\fR and the target is \f(CW\*(C`a.out\*(C'\fR.
.PP
If gprofng is executed without any additional option, action, or target, a usage
overview is printed.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fI\-\-version\fR" 4
.IX Item "--version"
print the version number and exit.
.IP "\fI\-\-help\fR" 4
.IX Item "--help"
print usage information and exit.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The following environment variables are supported:
.ie n .IP """\fBGPROFNG_MAX_CALL_STACK_DEPTH\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_MAX_CALL_STACK_DEPTH\f(CW\fR" 4
.IX Item "GPROFNG_MAX_CALL_STACK_DEPTH"
set the depth of the call stack (default is 256).
.ie n .IP """\fBGPROFNG_USE_JAVA_OPTIONS\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_USE_JAVA_OPTIONS\f(CW\fR" 4
.IX Item "GPROFNG_USE_JAVA_OPTIONS"
may be set when profiling a C/\*(C+ application that uses \fBdlopen()\fR to execute Java code.
.ie n .IP """\fBGPROFNG_SSH_REMOTE_DISPLAY\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_SSH_REMOTE_DISPLAY\f(CW\fR" 4
.IX Item "GPROFNG_SSH_REMOTE_DISPLAY"
use this variable to define the ssh command executed by the remote display tool.
.ie n .IP """\fBGPROFNG_SKIP_VALIDATION\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_SKIP_VALIDATION\f(CW\fR" 4
.IX Item "GPROFNG_SKIP_VALIDATION"
set this variable to disable checking hardware, system, and Java versions.
.ie n .IP """\fBGPROFNG_ALLOW_CORE_DUMP\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_ALLOW_CORE_DUMP\f(CW\fR" 4
.IX Item "GPROFNG_ALLOW_CORE_DUMP"
set this variable to allow a core file to be generated; otherwise an error report is created on /tmp.
.ie n .IP """\fBGPROFNG_ARCHIVE\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_ARCHIVE\f(CW\fR" 4
.IX Item "GPROFNG_ARCHIVE"
use this variable to define the settings for automatic archiving upon experiment recording completion.
.ie n .IP """\fBGPROFNG_ARCHIVE_COMMON_DIR\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_ARCHIVE_COMMON_DIR\f(CW\fR" 4
.IX Item "GPROFNG_ARCHIVE_COMMON_DIR"
set this variable to the location of the common archive.
.ie n .IP """\fBGPROFNG_JAVA_MAX_CALL_STACK_DEPTH\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_JAVA_MAX_CALL_STACK_DEPTH\f(CW\fR" 4
.IX Item "GPROFNG_JAVA_MAX_CALL_STACK_DEPTH"
set the depth of the Java call stack; the default is 256; set to 0 to disable capturing of call stacks.
.ie n .IP """\fBGPROFNG_JAVA_NATIVE_MAX_CALL_STACK_DEPTH\fP""" 4
.el .IP "\f(CW\f(CBGPROFNG_JAVA_NATIVE_MAX_CALL_STACK_DEPTH\f(CW\fR" 4
.IX Item "GPROFNG_JAVA_NATIVE_MAX_CALL_STACK_DEPTH"
set the depth of the Java native call stack; the default is 256; set to 0 to disable capturing of call stacks (\s-1JNI\s0 and assembly call stacks are not captured).
.SH "NOTES"
.IX Header "NOTES"
The gprofng driver supports the following commands.
.PP
Collect performance data:
.ie n .IP """gprofng collect app""" 4
.el .IP "\f(CWgprofng collect app\fR" 4
.IX Item "gprofng collect app"
collect application performance data.
.PP
Display the performance results:
.ie n .IP """gprofng display text""" 4
.el .IP "\f(CWgprofng display text\fR" 4
.IX Item "gprofng display text"
display the performance data in \s-1ASCII\s0 format.
.ie n .IP """gprofng display html""" 4
.el .IP "\f(CWgprofng display html\fR" 4
.IX Item "gprofng display html"
generate an \s-1HTML\s0 file from one or more experiments.
.PP
Miscellaneous commands:
.ie n .IP """gprofng display src""" 4
.el .IP "\f(CWgprofng display src\fR" 4
.IX Item "gprofng display src"
display source or disassembly with compiler annotations.
.ie n .IP """gprofng archive""" 4
.el .IP "\f(CWgprofng archive\fR" 4
.IX Item "gprofng archive"
include binaries and source code in an experiment directory.
.PP
It is also possible to invoke the lower level commands directly, but since
these are subject to change, in particular the options, we recommend to
use the driver.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The man pages for the various gprofng commands are not available yet, but
the \fB\-\-help\fR option supported on each of the commands lists the options
and provides more information.
.PP
For example this displays the options supported on the \fBgprofng collect app\fR
command:
.PP
.Vb 1
\&        $ gprofng collect app \-\-help
.Ve
.PP
The user guide is available as an Info entry for \fIgprofng\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2022\-2023 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the \s-1GNU\s0 Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled \*(L"\s-1GNU\s0 Free Documentation License\*(R".
